[
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-activedescendant` property enhance the keyboard navigation for tree menus, and what are the potential pitfalls if not implemented correctly?",
        "Correct Answer": "The `aria-activedescendant` property enhances keyboard navigation for tree menus by allowing the focus to remain on the container element while indicating which child element is currently active. This reduces the need to move the DOM focus, which can be beneficial for performance and user experience. Potential pitfalls if not implemented correctly include confusion for screen reader users if the active descendant is not properly updated, leading to incorrect or missing information about the current focus.",
        "Evidence page": "251, 252, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also adds a layer of complexity by asking about potential pitfalls."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What is the significance of the `aria-level` attribute in the context of tree menus, and how does it interact with other ARIA attributes to ensure accessibility?",
        "Correct Answer": "The `aria-level` attribute indicates the hierarchical level of an element within a tree structure, which is crucial for screen readers to convey the structure of the tree to users. It interacts with other ARIA attributes like `role=\"treeitem\"`, `aria-setsize`, and `aria-posinset` to provide a complete and accessible representation of the tree's structure.",
        "Evidence page": "252, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires understanding the interaction between multiple attributes."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-posinset` attribute contribute to the accessibility of tree menus, and what challenges might arise in its implementation?",
        "Correct Answer": "The `aria-posinset` attribute specifies the position of an element within a set of siblings, which helps screen readers convey the position of the current item within the tree. Challenges in its implementation include ensuring that the position is accurately updated when the tree structure changes dynamically.",
        "Evidence page": "252, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also asks about implementation challenges, adding depth."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Explain the role of the `aria-setsize` attribute in tree menus and discuss its importance in dynamic content scenarios.",
        "Correct Answer": "The `aria-setsize` attribute indicates the number of items in a set, which helps screen readers provide context about the size of the current set of items. In dynamic content scenarios, it is important to ensure that `aria-setsize` is updated correctly to reflect changes in the number of items, which can be challenging to manage.",
        "Evidence page": "252, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It also considers dynamic content scenarios, adding complexity."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-labelledby` attribute improve the accessibility of the sortable list, and what are the potential consequences of not using it?",
        "Correct Answer": "The `aria-labelledby` attribute improves the accessibility of the sortable list by associating the list with a label that provides instructions or context, which is read by screen readers when the list receives focus. Not using it can result in a lack of context for screen reader users, making it difficult for them to understand how to interact with the list.",
        "Evidence page": "262, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also asks about potential consequences, adding depth."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What is the purpose of the `aria-hidden` attribute in the context of the sortable list, and how does it affect screen reader behavior?",
        "Correct Answer": "The `aria-hidden` attribute is used to hide elements from screen readers, which can be useful for elements that are not relevant to the current interaction. In the context of the sortable list, it is used to hide the instructions `<div>` by default, ensuring that screen readers do not read out unnecessary information. If not used correctly, it can lead to confusion or missing information for screen reader users.",
        "Evidence page": "262, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also asks about screen reader behavior, adding complexity."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `onKeyDown` function enhance the keyboard operability of the sortable list, and what are the potential issues if not implemented correctly?",
        "Correct Answer": "The `onKeyDown` function enhances the keyboard operability of the sortable list by defining the keys that can be used to interact with the list, such as moving items up and down. Potential issues if not implemented correctly include non-functional keyboard interactions, which can make the sortable list inaccessible to users who rely on keyboard navigation.",
        "Evidence page": "263, 264",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It also asks about potential issues, adding depth."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the potential challenges in implementing the `aria-label` attribute for dynamically updated sortable lists, and how can they be mitigated?",
        "Correct Answer": "Potential challenges in implementing the `aria-label` attribute for dynamically updated sortable lists include ensuring that the label accurately reflects the current state and position of items in the list. These challenges can be mitigated by updating the `aria-label` attribute in real-time as changes occur, ensuring that screen readers provide accurate and up-to-date information to users.",
        "Evidence page": "263, 264",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and hypothetical reasoning question type. It also asks about mitigation strategies, adding complexity."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-expanded` attribute affect the user experience in tree menus, and what are the best practices for its implementation?",
        "Correct Answer": "The `aria-expanded` attribute indicates whether a tree item with a submenu is expanded or collapsed, which helps screen readers convey the state of the submenu to users. Best practices for its implementation include ensuring that the attribute is updated correctly when the submenu state changes and providing clear visual indicators for sighted users.",
        "Evidence page": "253, 257",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also asks about best practices, adding depth."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What is the significance of the `aria-selected` attribute in the `selectItem()` function, and how does it enhance user interaction?",
        "Correct Answer": "The `aria-selected` attribute indicates whether an item is selected, which is important for screen readers to convey the selection state to users. In the `selectItem()` function, it enhances user interaction by providing feedback on which item is currently selected, improving the overall accessibility and usability of the tree menu.",
        "Evidence page": "255, 263",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also asks about user interaction, adding complexity."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between static and dynamic WAI-ARIA as mentioned in the book?",
        "Correct Answer": "Static WAI-ARIA refers to attributes that are set once and do not change, while dynamic WAI-ARIA involves attributes that can change based on user interaction or other events.",
        "Evidence page": "4",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book suggest handling the limitations of WAI-ARIA?",
        "Correct Answer": "The book suggests explaining the limitations of WAI-ARIA and applying WAI-ARIA landmarks and live regions to web content.",
        "Evidence page": "4",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the effective design patterns for accessible menu bars, tree menus, and sortable lists with WAI-ARIA?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the benefits of using ChromeVox Screen Reader for testing assignment submissions?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people with low vision when accessing web content, and how can these barriers be mitigated?",
        "Correct Answer": "Common barriers for people with low vision include: - Content sized with absolute measures so is not resizable - Inconsistent navigation - Images of text that degrade or pixelate when magnified - Low contrast (inability to distinguish text from background) - Time limits (insufficient time to complete tasks) - Unexpected actions (e.g., redirect when an element receives focus)",
        "Evidence page": "20",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people who are deaf or hard of hearing when accessing web content, and what solutions are suggested?",
        "Correct Answer": "Common barriers for people who are deaf or hard of hearing include: - Audio without a transcript - Multimedia without captions or a transcript - Lack of ASL interpretation (for ASL/Deaf community)",
        "Evidence page": "21",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people with mobility-related disabilities when accessing web content, and what solutions are suggested?",
        "Correct Answer": "Common barriers for people with mobility-related disabilities include: - Clickable areas that are too small - Functional elements that cannot be controlled with a keyboard - Time limits (insufficient time to complete tasks)",
        "Evidence page": "22",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people with learning or cognitive disabilities when accessing web content, and what solutions are suggested?",
        "Correct Answer": "Common barriers for people with learning or cognitive disabilities include: - Use of overly complex/advanced language - Inconsistent navigation - Overly complex or excessive amounts of content - Time limits (insufficient time to complete tasks) - Unstructured content (no visible headings, sections, topics, etc.) - Unexpected actions (e.g., redirect when an element receives focus)",
        "Evidence page": "23",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people who are blind when accessing web content, and what solutions are suggested?",
        "Correct Answer": "Common barriers for people who are blind include: - Visual content that has no text alternative - Functional elements that cannot be controlled with a keyboard - Overly complex or excessive amounts of content - Inability to navigate within a page of content - Content that is not structured - Inconsistent navigation - Time limits (insufficient time to complete tasks) - Unexpected actions (e.g., redirect when an element receives focus) - Multimedia without audio description",
        "Evidence page": "18",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of web accessibility for businesses, according to Karl Groves?",
        "Correct Answer": "Benefits of web accessibility for businesses include: - Improved search engine optimization - Improved usability - Reduced website costs - People with disabilities have buying power - Reduced resource utilization - Support for low bandwidth - Social responsibility - Support for aging populations - Reduced legal risk",
        "Evidence page": "27, 28",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key points highlighted in the \"Key Point\" boxes throughout the book?",
        "Correct Answer": "Key points highlighted in the \"Key Point\" boxes include: - Essential information and interesting points - Must know information, as well as less obvious considerations and interesting points",
        "Evidence page": "9, 25",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the common barriers faced by people with disabilities when accessing web content?",
        "Correct Answer": "Common barriers faced by people with disabilities include: - Visual content that has no text alternative - Functional elements that cannot be controlled with a keyboard - Overly complex or excessive amounts of content - Inability to navigate within a page of content - Content that is not structured - Inconsistent navigation - Time limits (insufficient time to complete tasks) - Unexpected actions (e.g., redirect when an element receives focus) - Multimedia without audio description - Content sized with absolute measures so is not resizable - Images of text that degrade or pixelate when magnified - Low contrast (inability to distinguish text from background) - Audio without a transcript - Multimedia without captions or a transcript - Lack of ASL interpretation (for ASL/Deaf community) - Clickable areas that are too small - Use of overly complex/advanced language - Unstructured content (no visible headings, sections, topics, etc.) - Reading: text justification (inconsistent spacing between words) - Reading: images of text (not readable with a text reader) - Visual: visual content with no text description - Math: images of math equations (not readable with a math reader)",
        "Evidence page": "16, 17, 18, 19, 20, 21, 22, 23",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of adding accessibility features to a website, according to the \"curb cut effect\"?",
        "Correct Answer": "Benefits of adding accessibility features to a website according to the \"curb cut effect\" include: - Text description with an image makes the image's meaning accessible to a person who is blind and makes it possible for search engines to index the image and make it searchable. - Allows a person on a slow Internet connection to turn images off and still get the same information. - Allows a person using a text-based browser to access the same information as those using a typical visual browser.",
        "Evidence page": "25",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the prerequisites for understanding the content of this book?",
        "Correct Answer": "Prerequisites for understanding the content of this book include: - JavaScript: Functional understanding of the JavaScript scripting language and familiarity with using jQuery and jQuery plugins. - HTML: Functional understanding of HTML 5. - Git Version Control: Basic understanding of how it is used and a GitHub account.",
        "Evidence page": "5",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How can web developers ensure that their websites are accessible to people with disabilities?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the best practices for implementing WAI-ARIA in web development?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How can web developers test the accessibility of their websites?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential legal implications for businesses that do not comply with web accessibility standards?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How can web developers balance the need for accessibility with the desire for innovative and complex web designs?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key points highlighted in the \"Try This\" boxes throughout the book?",
        "Correct Answer": "Key points highlighted in the \"Try This\" boxes include: - Usually a quick activity to help you understand a topic being discussed. - Skip ahead to the end of the book and read through the Book Recap for a high-level summary of the topics covered in the book.",
        "Evidence page": "9, 10",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What key is used to navigate into the accordions and move between accordion headers and panels?",
        "Correct Answer": "The Tab key is used to navigate into the accordions and move between accordion headers and panels.",
        "Evidence page": "192",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting the Level 1 recognition level and factual recall question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the role of the `aria-live` attribute in a carousel?",
        "Correct Answer": "The `aria-live` attribute in a carousel is used to announce updates to the content in the live region when a screen reader is not reading elsewhere on the page.",
        "Evidence page": "213",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting the Level 1 recognition level and factual recall question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the purpose of the `onKeyDown` function in the context of tab panels?",
        "Correct Answer": "The `onKeyDown` function is used to add keyboard operability to the tab panel, allowing arrow key navigation between tabs and panels.",
        "Evidence page": "203",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting the Level 1 recognition level and factual recall question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `autoCollapse` property affect the behavior of accordion panels?",
        "Correct Answer": "The `autoCollapse` property, when set to true, ensures that only one panel can be expanded at a time, collapsing any other expanded panel.",
        "Evidence page": "193",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Explain the process of making a tab panel accessible using WAI-ARIA roles and properties.",
        "Correct Answer": "The process involves assigning `role=\"tablist\"` to the container, `role=\"tab\"` to each tab, `role=\"tabpanel\"` to each panel, using `aria-controls` to link tabs to panels, `aria-selected` to indicate the selected tab, and `aria-hidden` to hide inactive panels.",
        "Evidence page": "198, 199, 200",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It also requires cross-multi-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-hidden` attribute contribute to the accessibility of tab panels?",
        "Correct Answer": "The `aria-hidden` attribute is used to hide inactive tab panels from screen readers, ensuring that only the active panel is announced.",
        "Evidence page": "198, 199",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Compare the keyboard interactions for accordion panels and tab panels.",
        "Correct Answer": "Accordion panels use the Tab key to navigate between headers and panels, and arrow keys to move between headers. Tab panels use the Tab key to navigate into the tab list and between tabs and panels, and arrow keys to move between tabs.",
        "Evidence page": "189, 201, 202",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative & prediction analysis question type. It also requires cross-multi-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between the `onKeyDown` functions for accordions and carousels?",
        "Correct Answer": "The `onKeyDown` function for accordions allows navigation between headers and panels using arrow keys and the Tab key, while for carousels, it enables navigation between panels using arrow keys and stops automatic rotation with the Esc key.",
        "Evidence page": "190, 214",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative & prediction analysis question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-describedby` attribute enhance the accessibility of carousels?",
        "Correct Answer": "The `aria-describedby` attribute provides screen reader users with instructions on how to navigate the carousel, enhancing its accessibility.",
        "Evidence page": "211, 212",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What would be the impact on user experience if the `aria-live` attribute was set to \"assertive\" instead of \"polite\" in a carousel?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the behavior of accordion panels change if the `autoCollapse` property was set to `null`?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What additional WAI-ARIA roles and properties could be used to further enhance the accessibility of tab panels?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and experimental design question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the purpose of the `Ctrl+Page Down` key in the context of accordion panels?",
        "Correct Answer": "If focus is inside an accordion panel or on an accordion header, `Ctrl+Page Down` moves focus to the next accordion header. If focus is in the last accordion header or panel, it either does nothing or moves focus to the first accordion header.",
        "Evidence page": "189",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting the Level 1 recognition level and factual recall question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the role of the `role=\"tablist\"` attribute in a tab panel?",
        "Correct Answer": "The `role=\"tablist\"` attribute is used to define the container of the tabs, replacing list semantics with tab panel semantics.",
        "Evidence page": "196",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting the Level 1 recognition level and factual recall question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-controls` attribute link tabs to their associated panels in a tab panel?",
        "Correct Answer": "The `aria-controls` attribute links each tab to its associated panel by referencing the panel's ID, ensuring that the correct panel is displayed when the tab is selected.",
        "Evidence page": "198, 199",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Describe the process of testing an updated accordion with ChromeVox.",
        "Correct Answer": "Watch the video to see how ChromeVox interacts with an accordion. The Tab key is used to navigate into the accordions, move between accordion headers, and move between headers and panels. Arrow keys can also be used to move between accordion headers, but not from headers to an associated panel.",
        "Evidence page": "206",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-selected` attribute affect the behavior of tabs in a tab panel?",
        "Correct Answer": "The `aria-selected` attribute indicates which tab is currently selected, ensuring that screen readers announce the selected tab and that it is keyboard focusable.",
        "Evidence page": "199, 200",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key steps involved in making a carousel accessible using WAI-ARIA roles and properties?",
        "Correct Answer": "The key steps include assigning `role=\"region\"` to the carousel, using `aria-live=\"polite\"` to announce updates, adding `tabindex=\"0\"` for keyboard focus, using `aria-describedby` to provide instructions, and managing `aria-hidden` to hide inactive slides.",
        "Evidence page": "210, 211, 212",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It also requires cross-multi-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `tabindex` attribute contribute to the keyboard operability of tab panels and carousels?",
        "Correct Answer": "The `tabindex` attribute makes elements keyboard focusable, with `tabindex=\"0\"` allowing focus and `tabindex=\"-1\"` removing focus temporarily, ensuring smooth navigation between tabs and panels.",
        "Evidence page": "198, 211",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Compare the grading rubrics for Activity 9: Accessible Accordion and Activity 10: Accessible Tab Panel.",
        "Correct Answer": "The grading rubrics for Activity 9 and Activity 10 both focus on ensuring keyboard operability and screen reader accessibility, but Activity 9 emphasizes accordion header focus and panel expand/collapse functionality, while Activity 10 emphasizes tab focus and panel display on tab selection.",
        "Evidence page": "195, 208",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative & prediction analysis question type. It also requires cross-two-image content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What keys are used to navigate between panels in the carousel?",
        "Correct Answer": "The Left and Right arrow keys are used to navigate between panels in the carousel.",
        "Evidence page": "227",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the URL to view the interactive or media element online for the carousel?",
        "Correct Answer": "The URL is https://pressbooks.library.ryerson.ca/wafd/?p=362",
        "Evidence page": "225",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a factual recall question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the main function of the Tab key while the carousel has focus?",
        "Correct Answer": "The Tab key sends focus to any focusable element within the panel that is in view.",
        "Evidence page": "227",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the carousel behave differently when it receives focus compared to when it does not have focus?",
        "Correct Answer": "When the carousel receives focus, rotation stops, and navigation instructions are read. When it does not have focus, the carousel rotates automatically.",
        "Evidence page": "227, 229",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the steps to make a carousel accessible according to the activity instructions?",
        "Correct Answer": "1. Add keyboard operations for the carousel.\n2. Use Left and Right arrows for moving between panels.\n3. Use the Esc key to exit the carousel and resume automatic rotation.\n4. Ensure the contents of each panel are read through a live region when the carousel has focus.\n5. Test the updated carousel with ChromeVox.",
        "Evidence page": "228, 229",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves a step-by-step explanation based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the criteria for grading the accessible carousel activity?",
        "Correct Answer": "- Instructions Provided: Screen reader instructions are provided when the carousel receives focus.\n- Carousel Focusable: Carousel panels are keyboard focusable.\n- Carousel Navigation: Navigate between panels with the Left and Right Arrow keys.\n- Panels Read Aloud: Each panel reads aloud when it comes into view while the carousel has focus.\n- Manual while in Focus: Panels rotate manually when in focus or while a mouse pointer is hovering over the carousel.\n- Rotate when No Focus: Panels rotate automatically when the carousel is not in focus.",
        "Evidence page": "229, 230",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves data retrieval and understanding of the grading rubric based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the role of 'menubar' differ from the role of 'menu' in the context of accessible menu bars?",
        "Correct Answer": "The role of 'menubar' is used for the top-level container of a menu bar, while the role of 'menu' is used for submenus within the menu bar.",
        "Evidence page": "233, 234",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves conceptual understanding and comparison based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between a menu bar and a tree menu in terms of their structure and functionality?",
        "Correct Answer": "A menu bar is typically presented horizontally and contains links to key areas of a website or application, while a tree menu is arranged vertically and often used for hierarchical navigation.",
        "Evidence page": "233, 249",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves comparative analysis based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the accessibility features of the carousel change if the focus behavior was modified to include additional keyboard shortcuts?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What additional accessibility features could be implemented in the menu bar to enhance user experience beyond what is described in the text?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the implementation of a voice command system impact the accessibility and usability of the carousel and menu bar?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the purpose of the 'aria-hidden' attribute in the context of accessible menu bars?",
        "Correct Answer": "The 'aria-hidden' attribute is used to hide instructions from screen readers until needed.",
        "Evidence page": "233",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the role of the 'aria-expanded' attribute in the context of tree menus?",
        "Correct Answer": "The 'aria-expanded' attribute indicates whether a tree item with a submenu is expanded or collapsed.",
        "Evidence page": "249",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the 'aria-labelledby' attribute enhance the accessibility of menu bars and tree menus?",
        "Correct Answer": "The 'aria-labelledby' attribute references the ID of an element that labels the menu bar or tree menu, providing a descriptive label for screen readers.",
        "Evidence page": "233, 249",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key steps to add keyboard operability to a menu bar according to the instructions provided?",
        "Correct Answer": "1. Provide instructions on how to use the menu with a keyboard.\n2. Add role='menubar' to the top-level <ul>.\n3. Make the <ul> keyboard focusable with tabindex='0'.\n4. Add role='menu' to <ul> elements with submenus and hide them by default using aria-hidden='true'.\n5. Set up menu items with role='menuitem' and remove keyboard access by default with tabindex='-1'.\n6. Label each menu item using aria-label.\n7. Add aria-haspopup='true' to menu items with submenus and set aria-expanded='false' by default.\n8. Add aria-selected='true' to selected menu items and make them keyboard accessible with tabindex='0'.\n9. Add keyboard access back to menu items using tabindex='0'.\n10. Reference the keyboard access class in the onKeyDown function.",
        "Evidence page": "235, 236",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves a step-by-step explanation based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the grading rubric for the accessible menu bar activity ensure that all necessary accessibility features are implemented?",
        "Correct Answer": "The grading rubric ensures that instructions are provided, menu bar semantics are used, submenus are announced, focus control is maintained, and the menu bar is keyboard operable.",
        "Evidence page": "237, 238",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the main objectives of the unit on accessible elements, and how do they relate to the activities provided?",
        "Correct Answer": "The main objectives are to describe the elements of an accessible menu bar, identify tree menu accessibility features, and explain how an accessible sortable list functions. These objectives relate to the activities of creating accessible menu bars, tree menus, and sortable lists.",
        "Evidence page": "232, 248",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves conceptual understanding and multi-hop reasoning based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the implementation of 'aria-level' and 'aria-posinset' attributes contribute to the accessibility of tree menus?",
        "Correct Answer": "The 'aria-level' attribute indicates the hierarchical level of a tree item, and the 'aria-posinset' attribute indicates the position of a tree item within its set, providing context for screen readers.",
        "Evidence page": "249, 250",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences in the keyboard interaction guidelines for menu bars and tree menus as defined by the W3C?",
        "Correct Answer": "Menu bars use horizontal navigation with Left and Right arrows, while tree menus use vertical navigation with Up and Down arrows. Menu bars have submenus that open with Down Arrow, while tree menus expand and collapse with Right and Left arrows.",
        "Evidence page": "239, 245",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves comparative analysis based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do the instructions for adding keyboard operability to a menu bar and a tree menu differ in terms of implementation steps?",
        "Correct Answer": "For a menu bar, instructions include adding role='menubar' and role='menuitem', and using Left and Right arrows for navigation. For a tree menu, instructions include adding role='tree' and role='treeitem', and using Up and Down arrows for navigation.",
        "Evidence page": "235, 251",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves comparative analysis and step-by-step explanation based on the content of two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the function of the Alt+Down Arrow key when the popup is available but not displayed?",
        "Correct Answer": "If the popup is available but not displayed, the Alt+Down Arrow key displays the popup without moving focus.",
        "Evidence page": "150",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on a single image, fitting the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What should be ensured about JavaScript in relation to browser-provided text editing functions?",
        "Correct Answer": "Be sure that JavaScript does not interfere with browser-provided text editing functions by capturing key events for the keys used to perform them.",
        "Evidence page": "150",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on a single image, fitting the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the role of the onKeyUp() function in making the suggestion box accessible?",
        "Correct Answer": "The onKeyUp() function captures the keypress event and integrates the existing functionality in the default for the switch statement, allowing the suggestion box to be accessible.",
        "Evidence page": "151",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on a single image, fitting the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the URL provided to view the excluded interactive or media element online?",
        "Correct Answer": "https://pressbooks.library.ryerson.ca/wafd/?p=330",
        "Evidence page": "152",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on a single image, fitting the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the total number of points available for Activity 5: Accessible Suggestion Box?",
        "Correct Answer": "10.0 points",
        "Evidence page": "156",
        "Evidence source": "Table",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on a single image, fitting the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of the Alt+Up Arrow key enhance the accessibility of a suggestion box?",
        "Correct Answer": "If the popup is displayed, the Alt+Up Arrow key returns focus to the textbox if the popup contains focus, or closes the popup.",
        "Evidence page": "150, 151",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Explain the importance of adding keyboard operability to the suggestion box.",
        "Correct Answer": "Adding keyboard operability is the most significant effort in making the suggestion box accessible, allowing users to navigate through the suggestions and select items using the keyboard.",
        "Evidence page": "151, 153",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the grading rubric for Activity 5 ensure the accessibility of the suggestion box?",
        "Correct Answer": "The grading rubric ensures accessibility by requiring that instructions are provided when the country field receives focus, the suggestion list is announced when suggestions are available, instructions are provided when suggestions are available, and a country selection can be made using only the keyboard.",
        "Evidence page": "156, 157",
        "Evidence source": "Table, Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between the roles, states, and properties used in a tooltip and a progress bar?",
        "Correct Answer": "The key differences are: - Tooltip: role=\"tooltip\", aria-hidden=[true|false], aria-live=\"polite\", tabindex=[0|-1] - Progress Bar: role=\"progressbar\", tabindex=[0|-1], aria-valuenow=\"0\", aria-valuemin=\"0\", aria-valuemax=\"[max value define in default options]\", aria-describedby=\"[instruction ID]\", role=\"region\", aria-live=\"assertive\", aria-atomic=\"additions\", aria-hidden=\"[true|false]\"",
        "Evidence page": "157, 166",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the comparative & prediction analysis type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of WAI-ARIA attributes enhance the accessibility of tooltips and progress bars?",
        "Correct Answer": "The use of WAI-ARIA attributes enhances the accessibility of tooltips and progress bars by providing roles, states, and properties that make these elements perceivable and operable by screen readers. For example, aria-live=\"polite\" in tooltips ensures that the content is read aloud when it appears, and aria-valuenow in progress bars provides the current value to screen readers.",
        "Evidence page": "159, 167",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What would be the impact on accessibility if the Alt+Down Arrow and Alt+Up Arrow keys were not implemented in the suggestion box?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the accessibility of the suggestion box change if the onKeyUp() function was not integrated with the existing functionality?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What additional WAI-ARIA attributes could be used to further enhance the accessibility of tooltips and progress bars?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of aria-live=\"polite\" in tooltips and progress bars improve their accessibility?",
        "Correct Answer": "The use of aria-live=\"polite\" in tooltips and progress bars improves their accessibility by ensuring that updates to the content are announced to screen readers in a non-intrusive manner, allowing users to be informed of changes without disrupting their current task.",
        "Evidence page": "159, 167",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Compare the keyboard interactions required for tooltips and progress bars.",
        "Correct Answer": "The keyboard interactions for tooltips typically involve using the Tab key to navigate to the owning element, which then displays the tooltip, and the Esc key to dismiss it. For progress bars, the keyboard interactions involve using the Enter or Space bar to retrieve the current value of the progress.",
        "Evidence page": "161, 173",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the comparative & prediction analysis type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of aria-hidden=\"true\" and aria-hidden=\"false\" attributes affect the visibility of tooltips and progress bars?",
        "Correct Answer": "The use of aria-hidden=\"true\" and aria-hidden=\"false\" attributes affects the visibility of tooltips and progress bars by controlling whether these elements are exposed to screen readers. When aria-hidden=\"true\", the element is hidden from screen readers, and when aria-hidden=\"false\", the element is visible to screen readers.",
        "Evidence page": "159, 171",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-two-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Explain the process of making a suggestion box accessible using the provided book files.",
        "Correct Answer": "The process involves adding keyboard operability by creating a switch that captures the keypress event, selecting the next or previous item in the list with the Down or Up Arrow keys, and entering the value in the text field for any character key. This is added to the onKeyUp() function while integrating the existing functionality in the default for the switch statement.",
        "Evidence page": "155, 165",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-multi-image content, fitting the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the grading rubric for Activity 6 ensure the accessibility of tooltips?",
        "Correct Answer": "The grading rubric ensures accessibility by requiring that tooltips open when their owning element receives keyboard focus or mouseover, tooltips read aloud when their owning element receives keyboard focus or mouseover, tooltips hide when focus is removed or on mouseout, and tooltips hide when the Esc key is pressed.",
        "Evidence page": "154, 165",
        "Evidence source": "Table, Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-multi-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key steps involved in making a progress bar accessible using the provided book files?",
        "Correct Answer": "The key steps involve adding WAI-ARIA attributes to the progress bar, setting default values for aria-valuemin, aria-valuenow, and aria-valuemax, adding keyboard access with an on(keydown) reference, and creating a live region for notifications.",
        "Evidence page": "167, 176",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-multi-image content, fitting the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of WAI-ARIA attributes in tooltips and progress bars align with the W3C WAI-ARIA 1.1 Best Practices?",
        "Correct Answer": "The use of WAI-ARIA attributes in tooltips and progress bars aligns with the W3C WAI-ARIA 1.1 Best Practices by ensuring that these elements are accessible to screen readers and other assistive technologies. For example, using aria-live=\"polite\" in tooltips ensures that updates are announced in a non-intrusive manner, and using aria-valuenow in progress bars provides the current value to screen readers.",
        "Evidence page": "150, 157, 166",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on cross-multi-image content, fitting the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What does the `aria-describedby` attribute do?",
        "Correct Answer": "Identifies the element (or elements) that describes the object.",
        "Evidence page": "75",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward factual recall question based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What attribute identifies the element that labels the current element?",
        "Correct Answer": "`aria-labelledby`",
        "Evidence page": "75",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward factual recall question based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the purpose of the `tabindex=\"0\"` attribute in the \"menu_container\" div?",
        "Correct Answer": "It makes the \"menu_container\" div keyboard focusable.",
        "Evidence page": "77",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward factual recall question based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-haspopup` attribute affect the screen reader's announcement of a menu item?",
        "Correct Answer": "The `aria-haspopup` attribute causes a screen reader to announce that a submenu is present.",
        "Evidence page": "78",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Why is it important to use both `aria-label` and `aria-labelledby` when defining a custom region with `role=\"region\"`?",
        "Correct Answer": "When `role=\"region\"` is used, it must be accompanied by `aria-label` or `aria-labelledby` if there is an existing element on the page that describes the region (such as a heading).",
        "Evidence page": "100",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Explain the difference between `aria-live=\"assertive\"` and `aria-atomic=\"true\"` in the context of WAI-ARIA alerts.",
        "Correct Answer": "`aria-live=\"assertive\"` means the content will be read immediately, interrupting any ongoing speech, while `aria-atomic=\"true\"` means the entire content of the element will be read, not just the changed part.",
        "Evidence page": "104",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-expanded` attribute dynamically change based on user interaction with a submenu?",
        "Correct Answer": "The `aria-expanded` attribute dynamically updates to `false` when the submenu is closed and to `true` when the submenu is opened.",
        "Evidence page": "76, 78",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of using progressive enhancement over graceful degradation in WAI-ARIA implementations?",
        "Correct Answer": "Progressive enhancement is preferred because it creates base functionality that works for everyone, rather than providing enhancements only when supported by the browser and/or assistive technology.",
        "Evidence page": "82, 83",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do `aria-describedby` and `aria-details` attributes enhance the accessibility of hidden content for screen readers?",
        "Correct Answer": "The `aria-describedby` attribute identifies the element that describes the object, and the `aria-details` attribute identifies the element that provides a detailed, extended description for the object.",
        "Evidence page": "75, 78",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the implementation of WAI-ARIA attributes change if a new assistive technology with different requirements were introduced?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might arise in ensuring consistent WAI-ARIA support across all browsers and assistive technologies?",
        "Correct Answer": "Because WAI-ARIA is relatively new, its support across browsers and assistive technologies is still somewhat inconsistent.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might future updates to the WAI-ARIA specification impact current web accessibility practices?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a hypothetical reasoning question that cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the role of `aria-controls` in WAI-ARIA?",
        "Correct Answer": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
        "Evidence page": "75",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward factual recall question based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What does the `aria-owns` attribute define?",
        "Correct Answer": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
        "Evidence page": "75",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward factual recall question based on a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-activedescendant` attribute function in a dynamic WAI-ARIA implementation?",
        "Correct Answer": "The `aria-activedescendant` attribute is dynamically updated with script as the menu items are selected.",
        "Evidence page": "76, 78",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Why is it important to test WAI-ARIA implementations across multiple browsers and screen readers?",
        "Correct Answer": "Because WAI-ARIA support across browsers and assistive technologies is still somewhat inconsistent, it is advisable to test WAI-ARIA implementations across multiple browsers and screen readers.",
        "Evidence page": "81, 82",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do `aria-live` and `aria-relevant` attributes work together to manage live regions in WAI-ARIA?",
        "Correct Answer": "`aria-live` indicates that an element will be updated and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. `aria-relevant` indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
        "Evidence page": "80, 104",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from two images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between static and dynamic WAI-ARIA attributes?",
        "Correct Answer": "Static WAI-ARIA attributes can be written directly into the HTML and do not change, while dynamic WAI-ARIA attributes need to be dynamically updated based on user input or context.",
        "Evidence page": "75, 76, 78",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do WAI-ARIA landmarks improve navigation for assistive technology users?",
        "Correct Answer": "WAI-ARIA landmarks define regions on a web page, providing a means for assistive technology users to effectively navigate the various areas of a page.",
        "Evidence page": "97, 98, 99",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that their WAI-ARIA implementations are both backward-compatible and forward-compatible?",
        "Correct Answer": "Developers can ensure backward and forward compatibility by using progressive enhancement and providing redundant roles for newer HTML elements that may not be supported by current assistive technologies.",
        "Evidence page": "82, 83, 84",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on information from multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the 'curb cut effect' demonstrate the principle of universal design in web accessibility?",
        "Correct Answer": "The 'curb cut effect' demonstrates the principle of universal design in web accessibility by showing how features designed to assist people with disabilities can benefit a wider range of users. For example, text descriptions for images not only help blind users but also improve search engine indexing and usability for people using text-based browsers or slow internet connections.",
        "Evidence page": "25, 26",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can the implementation of web accessibility features reduce legal risks for businesses?",
        "Correct Answer": "The implementation of web accessibility features can reduce legal risks for businesses by preventing lawsuits related to discrimination against people with disabilities. By ensuring equal access to web content, businesses comply with legal requirements and avoid potential legal actions.",
        "Evidence page": "27, 28",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the potential economic benefits of making a website accessible to people with disabilities?",
        "Correct Answer": "The potential economic benefits of making a website accessible to people with disabilities include improved search engine optimization, increased usability leading to higher customer satisfaction and retention, reduced website costs, tapping into the buying power of people with disabilities, reduced resource utilization, support for low bandwidth users, enhanced social responsibility, and reduced legal risks.",
        "Evidence page": "27, 28",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the AODA's requirement for web accessibility align with the WCAG guidelines?",
        "Correct Answer": "The AODA's requirement for web accessibility aligns with the WCAG guidelines by mandating that obligated organizations meet the Level AA accessibility requirements of WCAG 2.0 by 2021. This alignment ensures that web content is accessible to people with disabilities, following internationally recognized standards.",
        "Evidence page": "29, 30, 33",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the challenges of achieving Level AAA compliance in WCAG, and why might it be considered undesirable in some cases?",
        "Correct Answer": "The challenges of achieving Level AAA compliance in WCAG include the high level of effort required to meet all criteria, which may not be practical or necessary for most websites. It might be considered undesirable because it can be unattainable and may not significantly improve usability for all users, making it an inefficient use of resources.",
        "Evidence page": "35",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the implementation of web accessibility features evolve with future technological advancements?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential economic impacts of increased web accessibility on a global scale?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the principles of WCAG be adapted to new forms of digital content, such as virtual reality or augmented reality?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential legal implications for companies that fail to comply with web accessibility standards in different jurisdictions?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the adoption of web accessibility standards influence the development of new web technologies?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential social impacts of widespread web accessibility?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might web accessibility standards evolve to address the needs of users with cognitive disabilities?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential benefits of integrating web accessibility features into the design process from the beginning?",
        "Correct Answer": "The potential benefits of integrating web accessibility features into the design process from the beginning include improved usability for all users, reduced development costs by avoiding retrofitting, enhanced search engine optimization, and compliance with legal requirements, which can reduce legal risks.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the principles of universal design be applied to other areas of technology beyond web development?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What are the potential challenges of implementing web accessibility features in existing websites?",
        "Correct Answer": "The potential challenges of implementing web accessibility features in existing websites include the need for significant redesign and redevelopment efforts, potential compatibility issues with existing content and systems, and the requirement for ongoing maintenance to ensure continued compliance with accessibility standards.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information, fitting the Level 3 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the AODA's requirement for web accessibility compare to the WCAG guidelines?",
        "Correct Answer": "The AODA's requirement for web accessibility compares to the WCAG guidelines by mandating that obligated organizations meet the Level AA accessibility requirements of WCAG 2.0 by 2021. This ensures that web content is accessible to people with disabilities, following internationally recognized standards.",
        "Evidence page": "29, 30, 33",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the challenges of achieving Level AAA compliance in WCAG?",
        "Correct Answer": "The challenges of achieving Level AAA compliance in WCAG include the high level of effort required to meet all criteria, which may not be practical or necessary for most websites. It might be considered undesirable because it can be unattainable and may not significantly improve usability for all users, making it an inefficient use of resources.",
        "Evidence page": "35",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can improved search engine optimization be a business argument for web accessibility?",
        "Correct Answer": "Improved search engine optimization can be a business argument for web accessibility because accessible websites are easier for search engines to index, making them more likely to appear in search results. This increased visibility can lead to higher traffic and potentially more customers.",
        "Evidence page": "27",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Why is it important for web content to be operable with both a mouse and a keyboard?",
        "Correct Answer": "It is important for web content to be operable with both a mouse and a keyboard because many people are unable to use a mouse effectively or at all. Ensuring that content is keyboard operable removes barriers for users who rely on keyboard navigation, such as those who are blind or have motor disabilities.",
        "Evidence page": "34",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the concept of 'curb cuts' in physical accessibility translate to web accessibility?",
        "Correct Answer": "The concept of 'curb cuts' in physical accessibility translates to web accessibility by illustrating how features designed to assist people with disabilities can benefit a wider range of users. For example, text descriptions for images not only help blind users but also improve search engine indexing and usability for people using text-based browsers or slow internet connections.",
        "Evidence page": "25, 26",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What function is used to update the label for moved items in the sortable list?",
        "Correct Answer": "The `resetNumbering()` function is used to update the label for moved items in the sortable list using `aria-label = \"[new position]\"`.",
        "Evidence page": "275",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What keys are needed for keyboard operation of a drag and drop sortable list?",
        "Correct Answer": "The Up and Down arrow keys are needed for keyboard operation of a drag and drop sortable list.",
        "Evidence page": "275",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the URL to view the interactive or media element excluded from the text?",
        "Correct Answer": "The URL to view the interactive or media element excluded from the text is https://pressbooks.library.ryerson.ca/wafd/?p=379.",
        "Evidence page": "275, 277, 278",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of multiple images."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `onKeyDown()` function enhance the accessibility of a sortable list?",
        "Correct Answer": "The `onKeyDown()` function enhances the accessibility of a sortable list by defining up and down arrow key operability, along with a roving tabindex.",
        "Evidence page": "275",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Why is it important to update the label for moved items in the sortable list using `aria-label`?",
        "Correct Answer": "Updating the label for moved items using `aria-label` is important because it ensures that screen reader users are informed about the new position of the items, enhancing the accessibility of the sortable list.",
        "Evidence page": "275",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of standard operating system modifier keys improve the accessibility of sortable lists?",
        "Correct Answer": "The use of standard operating system modifier keys improves the accessibility of sortable lists by allowing users to perform drag and drop operations using familiar key combinations, making the interaction more intuitive and accessible.",
        "Evidence page": "275",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of using ChromeVox for testing the accessibility of a sortable list?",
        "Correct Answer": "The benefits of using ChromeVox for testing the accessibility of a sortable list include being able to simulate how screen reader users interact with the list, ensuring that the list is navigable and operable using keyboard commands, and verifying that the list items announce their positions and movability correctly.",
        "Evidence page": "278",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the grading rubric ensure the accessibility of the sortable list?",
        "Correct Answer": "The grading rubric ensures the accessibility of the sortable list by providing criteria such as announcing instructions when the sortable list first receives focus, announcing the position and movability of list items, allowing list items to be moved using keyboard operations, and announcing the new position when a list item is moved.",
        "Evidence page": "281",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of live regions enhance the accessibility of web content?",
        "Correct Answer": "Live regions enhance the accessibility of web content by presenting updating information to screen readers, ensuring that users are aware of changes such as new headlines or updates in a newsfeed.",
        "Evidence page": "284",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might arise when implementing the `resetNumbering()` function in a real-world application?",
        "Correct Answer": "Not Answerable.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the lack of a best practice for authoring keyboard interaction for drag and drop elements impact developers?",
        "Correct Answer": "The lack of a best practice for authoring keyboard interaction for drag and drop elements might impact developers by leaving them without standardized guidelines, potentially leading to inconsistent implementations and reduced accessibility.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What additional features could be added to the `onKeyDown()` function to further enhance accessibility?",
        "Correct Answer": "Not Answerable.",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content but cannot be answered based on the available information."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the main focus of Chapter 1 in the book recap?",
        "Correct Answer": "The main focus of Chapter 1 is on getting started with WAI-ARIA, providing background information on the WAI-ARIA specification, introducing the jQuery plugin developed throughout the book, and introducing the ChromeVox screen reader.",
        "Evidence page": "282",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the main focus of Chapter 2 in the book recap?",
        "Correct Answer": "The main focus of Chapter 2 is on providing a detailed description of WAI-ARIA, discussing when and when not to use it, understanding WAI-ARIA roles, states, and properties, and introducing tools like LightHouse and aXe for validating WAI-ARIA.",
        "Evidence page": "282",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the main focus of Chapter 3 in the book recap?",
        "Correct Answer": "The main focus of Chapter 3 is on practical implementations of WAI-ARIA, including landmarks for screen reader navigation, alerts and messages for feedback, new tabindex values for keyboard access, and the use of application and presentation roles.",
        "Evidence page": "283",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This is a straightforward read-off question based on the content of a single image."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of WAI-ARIA roles, states, and properties improve web accessibility?",
        "Correct Answer": "The use of WAI-ARIA roles, states, and properties improves web accessibility by providing additional semantic information to assistive technologies, enabling better interaction and understanding of web content for users with disabilities.",
        "Evidence page": "282",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do progressive enhancement and graceful degradation differ in their approach to web development?",
        "Correct Answer": "Progressive enhancement starts with a version that works for everyone and adds features when they are supported, while graceful degradation starts with a full-featured version and ensures it still works as features are removed.",
        "Evidence page": "283",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do the new tabindex values 0 and -1 enhance keyboard access to web elements?",
        "Correct Answer": "The new tabindex values 0 and -1 enhance keyboard access to web elements by adding and removing keyboard access as needed, allowing users to interact with a widget or application more effectively.",
        "Evidence page": "283",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How do the different types of accordion interactions improve user experience on a webpage?",
        "Correct Answer": "The different types of accordion interactions improve user experience by allowing users to open and close sections of content, either one at a time or multiple at once, using keyboard navigation and toggling with the Enter key or space bar.",
        "Evidence page": "284",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of live regions in carousels enhance accessibility for screen reader users?",
        "Correct Answer": "The use of live regions in carousels enhances accessibility for screen reader users by creating a live region when the carousel has focus, automatically reading the content of each slide as it comes into view, and removing the live region when the carousel is exited to prevent continuous reading.",
        "Evidence page": "284",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference based on the provided text."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can the use of `aria-labelledby` improve the accessibility of a web page for screen reader users?",
        "Correct Answer": "The use of `aria-labelledby` can improve the accessibility of a web page for screen reader users by providing a reference to another element that labels the current element. This helps screen readers to announce the label of the element, making it easier for users to understand the context and purpose of the element.",
        "Evidence page": "100, 101",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the implications of using `role=\"navigation\"` without distinguishing between different navigation regions on a web page?",
        "Correct Answer": "Using `role=\"navigation\"` without distinguishing between different navigation regions on a web page can lead to confusion for screen reader users. It is important to distinguish between different navigation regions by using `aria-label` or `aria-labelledby` to describe each region, such as \"main navigation\" and \"content menu,\" to provide clear context and purpose.",
        "Evidence page": "100, 101",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of `aria-haspopup` attribute affect the interaction of assistive technologies with nested lists?",
        "Correct Answer": "The use of the `aria-haspopup` attribute affects the interaction of assistive technologies with nested lists by indicating that an element has a popup or submenu. When assistive technology encounters a list item with this attribute, it will announce that a submenu is present, helping users to understand the hierarchical structure of the menu.",
        "Evidence page": "102, 103",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the best practices for using `aria-live` attribute in dynamic web applications?",
        "Correct Answer": "The best practices for using `aria-live` attribute in dynamic web applications include using `aria-live=\"polite\"` for non-critical updates to allow screen readers to finish their current task before announcing the update, and `aria-live=\"assertive\"` for critical updates that need immediate attention. Additionally, developers should ensure that live regions are not overused to avoid overwhelming users with frequent updates.",
        "Evidence page": "110, 111",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that modal dialogs are accessible to all users, including those using screen readers?",
        "Correct Answer": "Developers can ensure that modal dialogs are accessible to all users, including those using screen readers, by using `role=\"alertdialog\"` and `aria-modal=\"true\"`. They should also ensure that focus is sent to the dialog when it is displayed and remains within the dialog until the interaction is complete. When the dialog closes, focus should be returned to the location from where the dialog was opened.",
        "Evidence page": "106, 107",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the potential challenges of using `role=\"application\"` in a web page, and how can they be mitigated?",
        "Correct Answer": "The potential challenges of using `role=\"application\"` in a web page include disabling standard screen reader shortcut keys, which can prevent users from navigating by headings or landmarks. This can be mitigated by using the application role carefully and ensuring it does not create more barriers than it is intended to prevent. It should be used only when necessary and appropriate for the functionality of the web page.",
        "Evidence page": "114, 115",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the implementation of WAI-ARIA landmarks and roles change if a new assistive technology with different interaction patterns were introduced?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might arise in ensuring cross-browser compatibility for WAI-ARIA roles and attributes?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the effectiveness of WAI-ARIA attributes change if screen readers were designed to interpret HTML elements differently?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that all content on a page is contained within a landmarked region?",
        "Correct Answer": "Developers can ensure that all content on a page is contained within a landmarked region by defining specific areas on the page using appropriate landmark roles and ensuring that all information is presented within these regions. This prevents information from being orphaned outside the defined regions.",
        "Evidence page": "100, 101",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the differences between `role=\"alert\"` and `role=\"alertdialog\"` in terms of user interaction?",
        "Correct Answer": "The differences between `role=\"alert\"` and `role=\"alertdialog\"` in terms of user interaction are that `role=\"alert\"` is used for error, warning, and completion feedback that does not require user input, while `role=\"alertdialog\"` is used for confirmation feedback that requires user input. The `alertdialog` must be focusable, and focus should be sent to the dialog when it appears.",
        "Evidence page": "104, 105",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative analysis question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-atomic` attribute affect the behavior of live regions in WAI-ARIA?",
        "Correct Answer": "The `aria-atomic` attribute affects the behavior of live regions in WAI-ARIA by determining whether the entire content of the live region should be read when it changes (`aria-atomic=\"true\"`) or only the changed content (`aria-atomic=\"false\"`). This ensures that users receive the appropriate amount of information based on the context.",
        "Evidence page": "104, 105",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers use WAI-ARIA roles to improve the accessibility of modal dialogs?",
        "Correct Answer": "Developers can use WAI-ARIA roles to improve the accessibility of modal dialogs by using `role=\"alertdialog\"` and `aria-modal=\"true\"`. They should ensure that focus is sent to the dialog when it is displayed and remains within the dialog until the interaction is complete. When the dialog closes, focus should be returned to the location from where the dialog was opened.",
        "Evidence page": "106, 107",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the best practices for using `role=\"presentation\"` in WAI-ARIA?",
        "Correct Answer": "The best practices for using `role=\"presentation\"` in WAI-ARIA include using it to hide decorative images, suppressing table semantics for layout tables, and eliminating semantics of intervening orphan elements in composite widgets. It should not be applied to elements with tab focus or elements modified with global states or properties.",
        "Evidence page": "104, 105",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that feedback messages are accessible to screen reader users?",
        "Correct Answer": "Developers can ensure that feedback messages are accessible to screen reader users by using the `role=\"alert\"` or `role=\"alertdialog\"` roles. These roles create live regions that automatically read the content of the feedback message when it appears, ensuring that users are informed of the message without needing to search for it.",
        "Evidence page": "104, 105",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of `aria-live=\"polite\"` differ from `aria-live=\"assertive\"` in live regions?",
        "Correct Answer": "The use of `aria-live=\"polite\"` differs from `aria-live=\"assertive\"` in live regions in that `polite` waits for a break in the screen reader's audio output before announcing the change, while `assertive` interrupts whatever the screen reader is reading to announce the change immediately. `Assertive` should be used sparingly and only for critical information.",
        "Evidence page": "110, 111",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative analysis question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the implications of using `role=\"application\"` in a web page?",
        "Correct Answer": "The implications of using `role=\"application\"` in a web page include disabling standard screen reader shortcut keys, which can prevent users from navigating by headings or landmarks. This can be mitigated by using the application role carefully and ensuring it does not create more barriers than it is intended to prevent. It should be used only when necessary and appropriate for the functionality of the web page.",
        "Evidence page": "114, 115",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers use WAI-ARIA attributes to provide context information for keyboard navigation?",
        "Correct Answer": "Developers can use WAI-ARIA attributes to provide context information for keyboard navigation by using attributes like `aria-label`, `aria-labelledby`, and `aria-describedby` to describe the purpose and context of elements. Additionally, using `tabindex` to control focus order and `aria-live` to announce dynamic content changes can enhance keyboard navigation.",
        "Evidence page": "108, 109",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that all content on a page is contained within a landmarked region?",
        "Correct Answer": "Developers can ensure that all content on a page is contained within a landmarked region by defining specific areas on the page using appropriate landmark roles and ensuring that all information is presented within these regions. This prevents information from being orphaned outside the defined regions.",
        "Evidence page": "100, 101",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the implementation of WAI-ARIA landmarks and alerts enhance the accessibility of dynamic web content?",
        "Correct Answer": "The implementation of WAI-ARIA landmarks and alerts enhances the accessibility of dynamic web content by providing easy navigation within a web page for assistive technology users. Landmarks allow users to jump to specific sections of a page, and live regions present changing content automatically to assistive technology users without the need to search the page.",
        "Evidence page": "125, 126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the impact of WAI-ARIA landmarks and alerts on dynamic web content."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key considerations when adding `role=\"alert\"` to feedback messages in a web form?",
        "Correct Answer": "The key considerations when adding `role=\"alert\"` to feedback messages in a web form include ensuring that the alert role is added to error messages generated for invalid input fields so that the messages are read automatically by screen readers. This helps users to correct errors without needing to search for the messages.",
        "Evidence page": "125, 126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It requires understanding the considerations for adding `role=\"alert\"` to feedback messages."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can developers ensure that landmark regions with the same role are distinguishable from each other?",
        "Correct Answer": "Developers can ensure that landmark regions with the same role are distinguishable from each other by using appropriate landmarks for each region and ensuring that all content within the page is contained within a landmarked region.",
        "Evidence page": "127",
        "Evidence source": "Table",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It requires understanding the process of making landmark regions distinguishable."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can the use of live regions in WAI-ARIA improve the user experience for assistive technology users?",
        "Correct Answer": "The use of live regions in WAI-ARIA can improve the user experience for assistive technology users by automatically presenting changing content, such as feedback messages, without requiring users to search the page. This ensures that users are immediately informed of important updates.",
        "Evidence page": "125, 126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the benefits of live regions for assistive technology users."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of using WAI-ARIA roles, states, and properties in web development?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "125, 133, 137",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the overall benefits of WAI-ARIA in web development."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the use of `aria-live` and `role=\"region\"` attributes in a suggestion box improve its accessibility?",
        "Correct Answer": "The use of `aria-live` and `role=\"region\"` attributes in a suggestion box improves its accessibility by ensuring that the list of suggestions is announced to screen readers when it appears, making it easier for users to navigate and select options.",
        "Evidence page": "133, 136",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the function of `aria-live` and `role=\"region\"` attributes in a suggestion box."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the recommended keyboard interactions for suggestion boxes according to WAI-ARIA best practices?",
        "Correct Answer": "The recommended keyboard interactions for suggestion boxes according to WAI-ARIA best practices include using the Down Arrow to move focus into the popup, the Up Arrow to move focus within the popup, the Esc key to dismiss the popup, the Enter key to accept a suggestion, and printable characters to type in the textbox.",
        "Evidence page": "137, 140",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval question type. It requires understanding the recommended keyboard interactions for suggestion boxes."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between the roles, states, and properties used in toggle buttons and suggestion boxes?",
        "Correct Answer": "The key differences between the roles, states, and properties used in toggle buttons and suggestion boxes are:\n- Toggle buttons use `role=\"button\"`, `tabindex=\"0\"`, `aria-label=\"[button name]\"`, and `aria-pressed=\"[true|false]\"`.\n- Suggestion boxes use `role=\"region\"`, `aria-live=\"polite\"`, and `aria-describedby=\"[id of instructions div]\"`.",
        "Evidence page": "133, 137",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative analysis question type. It requires understanding the specific roles, states, and properties for each widget."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the `aria-live` attribute enhance the accessibility of a suggestion box?",
        "Correct Answer": "The `aria-live` attribute enhances the accessibility of a suggestion box by ensuring that the list of suggestions is announced to screen readers when it appears, making it easier for users to navigate and select options.",
        "Evidence page": "133, 136",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the function of the `aria-live` attribute."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What steps are involved in making a toggle button accessible using WAI-ARIA?",
        "Correct Answer": "The steps involved in making a toggle button accessible using WAI-ARIA include adding a `tabindex` to make the button keyboard focusable, defining the `role=\"button\"`, adding a label with `aria-label=\"[button name]\"`, setting the default state with `aria-pressed=\"false\"`, and adding equivalent keyboard access for mouse access.",
        "Evidence page": "133, 137",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It requires understanding the process of adding WAI-ARIA attributes to toggle buttons."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the implementation of WAI-ARIA landmarks and alerts impact the overall user experience for individuals with different types of disabilities?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might developers face when adding WAI-ARIA roles to a complex web application?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How could the principles of WAI-ARIA be applied to emerging technologies such as virtual reality or augmented reality?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning question type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can keyboard operability be added to a suggestion box?",
        "Correct Answer": "Keyboard operability can be added to a suggestion box by defining keypress events for the Down Arrow to move focus into the popup, the Up Arrow to move focus within the popup, the Esc key to dismiss the popup, the Enter key to accept a suggestion, and printable characters to type in the textbox.",
        "Evidence page": "137, 140",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It requires understanding the process of adding keyboard operability."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the recommended keyboard interactions for toggle buttons according to WAI-ARIA 1.1 Authoring Practices?",
        "Correct Answer": "The recommended keyboard interactions for toggle buttons according to WAI-ARIA 1.1 Authoring Practices include using the Space or Enter keys to activate the button, and ensuring that focus is set appropriately after button activation depending on the action performed.",
        "Evidence page": "139, 140",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval question type. It requires understanding the recommended keyboard interactions."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the grading rubric ensure that all aspects of WAI-ARIA implementation are evaluated?",
        "Correct Answer": "The grading rubric ensures that all aspects of WAI-ARIA implementation are evaluated by assigning points for content being contained within a landmarked region, using correct landmarks, announcing error/feedback messages, and making landmark regions distinguishable from each other.",
        "Evidence page": "127",
        "Evidence source": "Table",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval question type. It requires understanding the grading rubric's criteria for evaluating WAI-ARIA implementation."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of using ChromeVox for testing WAI-ARIA landmarks and alerts?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the benefits of using ChromeVox for testing WAI-ARIA landmarks and alerts."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the potential drawbacks of using bypass links compared to WAI-ARIA landmarks for navigation?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "125",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and comparative analysis question type. It requires understanding the limitations of bypass links compared to WAI-ARIA landmarks."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How can the use of live regions in WAI-ARIA improve the user experience for assistive technology users?",
        "Correct Answer": "The use of live regions in WAI-ARIA can improve the user experience for assistive technology users by automatically presenting changing content, such as feedback messages, without requiring users to search the page. This ensures that users are immediately informed of important updates.",
        "Evidence page": "125, 126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding question type. It requires understanding the benefits of live regions for assistive technology users."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key considerations when adding `role=\"alert\"` to feedback messages in a web form?",
        "Correct Answer": "The key considerations when adding `role=\"alert\"` to feedback messages in a web form include ensuring that the alert role is added to error messages generated for invalid input fields so that the messages are read automatically by screen readers. This helps users to correct errors without needing to search for the messages.",
        "Evidence page": "125, 126",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation question type. It requires understanding the considerations for adding `role=\"alert\"` to feedback messages."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you ensure that the progress bar is accessible according to the instructions provided in the text?",
        "Correct Answer": "Ensure that the progress bar updates and announces progress like the one in the provided video. When progress has finished, it should announce 'Loading Complete.'",
        "Evidence page": "175, 176, 177",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key elements to be tested with ChromeVox for the updated progress bar?",
        "Correct Answer": "Instructions Provided, Keyboard Announce Progress, Announce Complete",
        "Evidence page": "177",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the marking rubric ensure the accessibility of the progress bar?",
        "Correct Answer": "The marking rubric ensures accessibility by checking if instructions are provided when the progress bar begins running, if the keyboard can be used to announce progress percentage, and if 'Loading Complete' is announced when progress finishes.",
        "Evidence page": "177",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the WAI-ARIA roles, states, and properties used in a slider?",
        "Correct Answer": "The WAI-ARIA roles, states, and properties used in a slider include: - `tabindex=\"[0 | -1]\"` - `role=\"slider\"` - `aria-valuemin=\"[number]\"` - `aria-valuemax=\"[number]\"` - `aria-valuenow=\"[number]\"`",
        "Evidence page": "181",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you dynamically set the value of aria-valuenow based on the value at which the slider thumb is located?",
        "Correct Answer": "Dynamically set the value of `aria-valuenow` based on the value at which the slider thumb is located by updating the attribute in the JavaScript code as the slider thumb moves.",
        "Evidence page": "173",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the keyboard interactions defined for a slider?",
        "Correct Answer": "The keyboard interactions defined for a slider include: - Right Arrow: Increase the value of the slider by one step. - Up Arrow: Increase the value of the slider by one step. - Left Arrow: Decrease the value of the slider by one step. - Down Arrow: Decrease the value of the slider by one step. - Home: Set the slider to the first allowed value in its range. - End: Set the slider to the last allowed value in its range. - Page Up (Optional): Increment the slider by an amount larger than the step change made by Up Arrow. - Page Down (Optional): Decrement the slider by an amount larger than the step change made by Down Arrow.",
        "Evidence page": "186",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you add keyboard operability to the slider widget?",
        "Correct Answer": "Add keyboard operability to the slider widget by using the `onKeyDown` function to handle keyboard events and update the slider's value accordingly.",
        "Evidence page": "187",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the recommended keyboard functionalities for an accordion according to WAI-ARIA best practices?",
        "Correct Answer": "The recommended keyboard functionalities for an accordion according to WAI-ARIA best practices include: - Enter or Space: When focus is on the accordion header for a collapsed panel, expands the associated panel. If the implementation allows only one panel to be expanded, and if another panel is expanded, collapses that panel. - Down Arrow (Optional): If focus is on an accordion header, moves focus to the next accordion header. - Up Arrow (Optional): If focus is on an accordion header, moves focus to the previous accordion header. - Home (Optional): When focus is on an accordion header, moves focus to the first accordion header. - End (Optional): When focus is on an accordion header, moves focus to the last accordion header. - Ctrl+Page Down (Optional): If focus is inside an accordion panel or on an accordion header, moves focus to the next accordion header. - Ctrl+Page Up (Optional): If focus is inside an accordion panel, moves focus to the header for that panel.",
        "Evidence page": "199",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you ensure that the accordion headers operate with both a mouse click and a keypress?",
        "Correct Answer": "Ensure that the accordion headers operate with both a mouse click and a keypress by adding a `tabindex=\"0\"` to the button element and using the `.on('keydown')` function to handle keypress events.",
        "Evidence page": "197",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key elements to be tested with ChromeVox for the updated slider?",
        "Correct Answer": "Slider Focusable, Keyboard Operable, Min/Max Values Announced, Value Announced",
        "Evidence page": "180, 181",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you dynamically set the aria-multiselectable attribute for an accordion?",
        "Correct Answer": "Dynamically set the `aria-multiselectable` attribute for an accordion by updating the attribute in the JavaScript code based on plugin configuration settings.",
        "Evidence page": "196",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key elements to be tested with ChromeVox for the updated accordion?",
        "Correct Answer": "Enter or Space, Down Arrow, Up Arrow, Home, End, Ctrl+Page Down, Ctrl+Page Up",
        "Evidence page": "203",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you ensure that the slider thumb is keyboard focusable?",
        "Correct Answer": "Ensure that the slider thumb is keyboard focusable by adding a `tabindex=\"0\"` to the slider thumb element.",
        "Evidence page": "192",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would you design an experiment to test the accessibility of a progress bar in different web browsers?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and experimental design type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might arise when making a carousel accessible, and how would you address them?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and hypothetical reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would you debug an error in the accessibility implementation of an accordion widget?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting the Level 3 recognition level and debugging error type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How would you ensure that the progress bar is accessible according to the instructions provided in the text?",
        "Correct Answer": "Ensure that the progress bar updates and announces progress like the one in the provided video. When progress has finished, it should announce 'Loading Complete.'",
        "Evidence page": "175, 176, 177",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key elements to be tested with ChromeVox for the updated progress bar?",
        "Correct Answer": "Instructions Provided, Keyboard Announce Progress, Announce Complete",
        "Evidence page": "177",
        "Evidence source": "Text",
        "Accuracy score": 0,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and data retrieval type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the marking rubric ensure the accessibility of the progress bar?",
        "Correct Answer": "The marking rubric ensures accessibility by checking if instructions are provided when the progress bar begins running, if the keyboard can be used to announce progress percentage, and if 'Loading Complete' is announced when progress finishes.",
        "Evidence page": "177",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the WAI-ARIA roles, states, and properties used in a slider?",
        "Correct Answer": "The WAI-ARIA roles, states, and properties used in a slider include: - `tabindex=\"[0 | -1]\"` - `role=\"slider\"` - `aria-valuemin=\"[number]\"` - `aria-valuemax=\"[number]\"` - `aria-valuenow=\"[number]\"`",
        "Evidence page": "181",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting the Level 2 recognition level and factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the main focus of the book mentioned on page 50?",
        "Correct Answer": "The main focus of the book is on creating device-independent code (works with keyboard and mouse) and using script to inject WAI-ARIA into HTML as needed to dynamically manage roles, states, and properties of various interactive widgets and applications.",
        "Evidence page": "50",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting into the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What are the two screen readers mentioned on page 50 that may show inconsistencies with the jQuery plugin?",
        "Correct Answer": "NVDA, JAWS",
        "Evidence page": "50",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting into the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the first step in setting up the ChromeVox screen reader as mentioned on page 54?",
        "Correct Answer": "Open the Chrome web browser (install Chrome, if needed).",
        "Evidence page": "54",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting into the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "Why might developers prefer using ChromeVox over other screen readers for testing web content, according to the text on page 53?",
        "Correct Answer": "Developers might prefer using ChromeVox because it is simple to install and configure, easy to use, free and open source, and works across computer platforms. It also has good support for WAI-ARIA.",
        "Evidence page": "53",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book suggest handling inconsistencies in screen reader support for WAI-ARIA as mentioned on pages 50 and 53?",
        "Correct Answer": "The book suggests testing with ChromeVox for development and using JAWS or NVDA for production testing to handle inconsistencies in screen reader support for WAI-ARIA.",
        "Evidence page": "50, 53",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the multi-hop reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the benefits of using WAI-ARIA with HTML5 as described on page 62?",
        "Correct Answer": "WAI-ARIA provides a framework for adding semantics that make it possible for assistive technology users to understand and operate custom elements created with HTML, JavaScript, and Ajax.",
        "Evidence page": "62",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book recommend testing for focus visibility when using ChromeVox, as mentioned on pages 45 and 56?",
        "Correct Answer": "When you are navigating with ChromeVox, it will add its own highlighting around elements when they receive focus. Test for focus visibility (WCAG 2 Guideline 2.4.7) when ChromeVox is not running.",
        "Evidence page": "45, 56",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the multi-hop reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key differences between static and dynamic WAI-ARIA attributes as described on pages 64 and 65?",
        "Correct Answer": "Static WAI-ARIA attributes can be written directly into the HTML of a web page, while dynamic WAI-ARIA attributes need to be dynamically updated based on user input or context.",
        "Evidence page": "64, 65",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the comparative & prediction analysis type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How would the use of WAI-ARIA attributes impact the accessibility of a web application if the attributes are not supported by the screen reader being used?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting into the hypothetical reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "What challenges might arise when using WAI-ARIA with older versions of HTML, and how could these be mitigated?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting into the hypothetical reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "3",
        "Question": "How might the development of new screen readers impact the recommendations provided in the book for using ChromeVox?",
        "Correct Answer": "Not Answerable",
        "Evidence page": "NA",
        "Evidence source": "NA",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question originates from the content of the images but cannot be answered based on the available information, fitting into the hypothetical reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "1",
        "Question": "What is the purpose of the WAI-ARIA Authoring Practices site mentioned on page 51?",
        "Correct Answer": "The WAI-ARIA Authoring Practices site provides many demonstrations of how WAI-ARIA can be used and typically follows the best practices recommended by W3C.",
        "Evidence page": "51",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question is a straightforward read-off from the context, fitting into the factual recall type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book suggest handling the use of WAI-ARIA with native HTML elements, as mentioned on pages 58 and 59?",
        "Correct Answer": "When there is a native HTML element available, it is almost always better to use the native version than creating your own. The native version will already have all the associated semantics by default.",
        "Evidence page": "58, 59",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key points to consider when setting up ChromeVox for the first time, as mentioned on pages 54 and 55?",
        "Correct Answer": "Open the Chrome web browser (install Chrome, if needed). Type “Chromevox” into Chrome’s address bar, or into Google search. Follow the ChromeVox link to the Chrome Web Store (the first link in the search results). Click the “Add to Chrome” button. In the dialog box that opens, click “Add extension.” Now installed, find the ChromeVox icon near the top right of Chrome to review its options. In the Options, set the ChromeVox modifier key to Alt or Ctrl or both (referred to here as CVox). In the Options, choose your preferred voice from the Voices menu. Done, turn ChromeVox on or off by pressing and holding the modifier key then pressing the letter “A” twice (i.e., CVox + A + A).",
        "Evidence page": "54, 55",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book recommend testing the accessibility of a website using only a keyboard, as described on pages 48 and 49?",
        "Correct Answer": "Navigate through a website using only a keyboard, describe how the screen reader behaves, and navigate with your monitor turned off or darkened.",
        "Evidence page": "48, 49",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the roles, states, and properties provided by WAI-ARIA, and how do they enhance web accessibility, as described on pages 60 and 61?",
        "Correct Answer": "Roles describe the type of widget presented, states describe the state widgets are in, and properties define live regions of a page. They enhance web accessibility by providing a framework for assistive technologies to understand and operate custom elements.",
        "Evidence page": "60, 61",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book suggest dealing with the inconsistencies in WAI-ARIA support across different browsers and screen readers, as mentioned on pages 50, 53, and 56?",
        "Correct Answer": "The book suggests testing with ChromeVox for development and using JAWS or NVDA for production testing to handle inconsistencies in WAI-ARIA support across different browsers and screen readers.",
        "Evidence page": "50, 53, 56",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the multi-hop reasoning type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the steps involved in navigating through a website using ChromeVox, as described on pages 57 and 58?",
        "Correct Answer": "Toggle ChromeVox on/off, stop reading, default reading, tab navigation, navigate through headings, navigate through landmarks, list links, navigate through forms, navigate through tables.",
        "Evidence page": "57, 58",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the step-by-step explanation type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "How does the book recommend using WAI-ARIA to enhance the accessibility of custom web elements, as described on pages 62 and 63?",
        "Correct Answer": "WAI-ARIA provides a framework for adding semantics that make it possible for assistive technology users to understand and operate custom elements created with HTML, JavaScript, and Ajax.",
        "Evidence page": "62, 63",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the conceptual understanding type."
    },
    {
        "Book name": "Web-Accessibility-for-Developers-1571157806",
        "Length": 298,
        "Recognition level": "2",
        "Question": "What are the key commands for using ChromeVox, and how do they facilitate web accessibility testing, as described on pages 57 and 58?",
        "Correct Answer": "Toggle ChromeVox on/off, stop reading, default reading, tab navigation, navigate through headings, navigate through landmarks, list links, navigate through forms, navigate through tables.",
        "Evidence page": "57, 58",
        "Evidence source": "Text",
        "Accuracy score": 1,
        "Evidence validation": true,
        "Alignment with the guidelines": "This question involves reasoning and inference, fitting into the step-by-step explanation type."
    }
]